
# AUTOGENERATED. DO NOT EDIT.
# Configuration file for CAN domain. Blank lines and lines beginning with # are filtered out.

# implicity, all types require a name
Types: Can, Target, RobotPose, Robot, EEPose, Obstacle

# Define the class location of each non-standard attribute type used in the above parameter type descriptions.
Attribute Import Paths: RedCan core.util_classes.can, BlueCan core.util_classes.can, PR2 core.util_classes.robots, Vector1d core.util_classes.matrix, Vector3d core.util_classes.matrix, PR2ArmPose core.util_classes.matrix, Table core.util_classes.table, Box core.util_classes.box

Predicates Import Path: core.util_classes.pr2_predicates

Primitive Predicates: geom, Target, BlueCan; value, Target, Vector3d; rotation, Target, Vector3d; geom, Robot, PR2; pose, Robot, Vector3d; backHeight, Robot, Vector1d; lArmPose, Robot, PR2ArmPose; lGripper, Robot, Vector1d; rArmPose, Robot, PR2ArmPose; rGripper, Robot, Vector1d; value, RobotPose, Vector3d; backHeight, RobotPose, Vector1d; lArmPose, RobotPose, PR2ArmPose; lGripper, RobotPose, Vector1d; rArmPose, RobotPose, PR2ArmPose; rGripper, RobotPose, Vector1d; geom, Obstacle, Box; pose, Obstacle, Vector3d; rotation, Obstacle, Vector3d; geom, Can, RedCan; pose, Can, Vector3d; rotation, Can, Vector3d; value, EEPose, Vector3d; rotation, EEPose, Vector3d

Derived Predicates: PR2StationaryBase, Robot; PR2Collides, Can, Obstacle; PR2RCollides, Robot, Obstacle; PR2GraspValidPos, EEPose, Target; PR2At, Can, Target; PR2EEReachableRot, Robot, RobotPose, EEPose; PR2InContact, Robot, EEPose, Target; PR2IsMP, Robot; PR2WithinJointLimit, Robot; PR2InGripperRot, Robot, Can; PR2RobotAt, Robot, RobotPose; PR2StationaryArms, Robot; PR2ObstructsHolding, Robot, RobotPose, RobotPose, Can, Can; PR2StationaryNEq, Can, Can; PR2EEReachablePos, Robot, RobotPose, EEPose; PR2Stationary, Can; PR2Obstructs, Robot, RobotPose, RobotPose, Can; PR2GraspValidRot, EEPose, Target; PR2StationaryW, Obstacle; PR2InGripperPos, Robot, Can


# The first set of parentheses after the colon contains the
# parameters. The second contains preconditions and the third contains
# effects. This split between preconditions and effects is only used
# for task planning purposes. Our system treats all predicates
# similarly, using the numbers at the end, which specify active
# timesteps during which each predicate must hold



Action moveto 30: (?robot - Robot ?start - RobotPose ?end - RobotPose) (and (forall (?c - Can)(not (PR2InGripperPos ?robot ?c))) (forall (?c - Can)(not (PR2InGripperRot ?robot ?c))) (PR2RobotAt ?robot ?start) (forall (?obj - Can )(not (PR2Obstructs ?robot ?start ?end ?obj))) (forall (?obj - Can)(PR2Stationary ?obj)) (forall (?w - Obstacle) (PR2StationaryW ?w)) (PR2StationaryArms ?robot) (PR2IsMP ?robot) (PR2WithinJointLimit ?robot) (forall (?w - Obstacle) (not (PR2RCollides ?robot ?w))) )(and (not (PR2RobotAt ?robot ?start)) (PR2RobotAt ?robot ?end) ) 0:0 0:0 0:0 0:28 0:28 0:28 0:28 0:28 0:29 0:29 29:29 29:29 

Action movetoholding 20: (?robot - Robot ?start - RobotPose ?end - RobotPose ?c - Can) (and (PR2RobotAt ?robot ?start) (PR2InGripperPos ?robot ?c) (PR2InGripperRot ?robot ?c) (forall (?obj - Can) (PR2StationaryNEq ?obj ?c)) (forall (?w - Obstacle) (PR2StationaryW ?w)) (PR2StationaryArms ?robot) (PR2IsMP ?robot) (PR2WithinJointLimit ?robot) )(and (not (PR2RobotAt ?robot ?start)) (PR2RobotAt ?robot ?end) ) 0:0 0:19 0:19 0:18 0:18 0:18 0:18 0:19 19:19 19:19 

Action grasp 40: (?robot - Robot ?can - Can ?target - Target ?sp - RobotPose ?ee - EEPose ?ep - RobotPose) (and (PR2At ?can ?target) (PR2RobotAt ?robot ?sp) (PR2EEReachablePos ?robot ?sp ?ee) (PR2EEReachableRot ?robot ?sp ?ee) (PR2InContact ?robot ?ee ?target) (PR2GraspValidPos ?ee ?target) (PR2GraspValidRot ?ee ?target) (forall (?obj - Can)(not (PR2InGripperPos ?robot ?obj))) (forall (?obj - Can)(not (PR2InGripperRot ?robot ?obj))) (forall (?obj - Can) (PR2Stationary ?obj)) (forall (?obj - Can) (PR2StationaryNEq ?obj ?can)) (forall (?w - Obstacle)(PR2StationaryW ?w)) (PR2StationaryBase ?robot) (PR2WithinJointLimit ?robot) (forall (?w - Obstacle)(not (PR2RCollides ?robot ?w))) (forall (?obj - Can)(not (PR2Obstructs ?robot ?sp ?ep ?obj))) (forall (?obj - Can)(not (PR2ObstructsHolding ?robot ?sp ?ep ?obj ?can))) )(and (not (PR2At ?can ?target)) (not (PR2RobotAt ?robot ?sp)) (PR2RobotAt ?robot ?ep) (PR2InGripperPos ?robot ?can) (PR2InGripperRot ?robot ?can) (forall (?sym1 - RobotPose)(forall (?sym2 - RobotPose)(not (PR2Obstructs ?robot ?sym1 ?sym2 ?can)))) (forall (?sym1 - Robotpose)(forall (?sym2 - RobotPose)(forall (?obj - Can) (not (PR2ObstructsHolding ?robot ?sym1 ?sym2 ?can ?obj))))) ) 0:0 0:0 20:20 17:23 20:38 20:20 20:20 0:0 0:0 0:19 20:38 0:38 17:22 0:39 0:39 0:17 18:39 39:38 39:38 39:39 21:39 21:39 39:38 39:38 

Action putdown 20: (?robot - Robot ?can - Can ?target - Target ?sp - RobotPose ?ee - EEPose ?ep - RobotPose) (and (PR2RobotAt ?robot ?sp) (PR2EEReachablePos ?robot ?sp ?ee) (PR2EEReachableRot ?robot ?sp ?ee) (PR2InContact ?robot ?ee ?target) (PR2GraspValidPos ?ee ?target) (PR2GraspValidRot ?ee ?target) (PR2InGripperPos ?robot ?can) (PR2InGripperRot ?robot ?can) (forall (?obj - Can)(PR2Stationary ?obj)) (forall (?obj - Can) (PR2StationaryNEq ?obj ?can)) (forall (?w - Obstacle)(PR2StationaryW ?w)) (PR2StationaryBase ?robot) (PR2IsMP ?robot) (PR2WithinJointLimit ?robot) )(and (not (PR2RobotAt ?robot ?sp)) (PR2RobotAt ?robot ?ep) (PR2At ?can ?target) (not (PR2InGripperPos ?robot ?can)) (not (PR2InGripperRot ?robot ?can)) ) 0:0 10:10 10:10 0:10 0:0 0:0 0:10 0:10 10:18 0:9 0:18 0:18 0:18 0:19 19:19 19:19 19:19 19:19 19:19 