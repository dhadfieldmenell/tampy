
# AUTOGENERATED. DO NOT EDIT.
# Configuration file for CAN domain. Blank lines and lines beginning with # are filtered out.

# implicity, all types require a name
Types: Robot, RobotPose, CollisionShape 

# Define the class location of each non-standard attribute type used in the above parameter type descriptions.

Attribute Import Paths: Vector1d core.util_classes.matrix, Vector2d core.util_classes.matrix, Vector3d core.util_classes.matrix, ArmPose7d core.util_classes.matrix, Table core.util_classes.items, Box core.util_classes.items, Basket core.util_classes.items, Cloth core.util_classes.items, Can core.util_classes.items, Door core.util_classes.items, Sphere core.util_classes.items, Baxter core.util_classes.robots, Sawyer core.util_classes.robots, Panda core.util_classes.robots

Predicates Import Path: core.util_classes.robot_predicates


Subtypes: Obstacle, Reachable - CollisionShape; Item, Target, SlideTarget, Handle, Button - Reachable; Cloth, Can, Box, Basket, Sphere - Item; Button - Can; Door - Obstacle; ClothTarget, BoxTarget, CanTarget, BasketTarget - Target; Baxter, Sawyer, Panda - Robot; BaxterPose, SawyerPose, PandaPose - RobotPose

Primitive Predicates: value, Reachable, Vector3d; rotation, Reachable, Vector3d; pose, CollisionShape, Vector3d; rotation, CollisionShape, Vector3d; pose, Item, Vector3d; rotation, Item, Vector3d; value, Target, Vector3d; rotation, Target, Vector3d; value, SlideTarget, Vector3d; rotation, SlideTarget, Vector3d; geom, Basket, Basket; pose, Basket, Vector3d; rotation, Basket, Vector3d; geom, Cloth, Cloth; pose, Cloth, Vector3d; rotation, Cloth, Vector3d; geom, Can, Can; pose, Can, Vector3d; rotation, Can, Vector3d; geom, Handle, Can; pose, Handle, Vector3d; rotation, Handle, Vector3d; geom, Sphere, Sphere; pose, Sphere, Vector3d; rotation, Sphere, Vector3d; geom, Box, Box; pose, Box, Vector3d; rotation, Box, Vector3d; geom, BasketTarget, Basket; value, BasketTarget, Vector3d; rotation, BasketTarget, Vector3d; value, ClothTarget, Vector3d; rotation, ClothTarget, Vector3d; geom, ClothTarget, Cloth; value, CanTarget, Vector3d; rotation, CanTarget, Vector3d; geom, CanTarget, Can; value, BoxTarget, Vector3d; rotation, BoxTarget, Vector3d; geom, BoxTarget, Box; pose, Robot, Vector3d; rotation, Robot, Vector3d; value, RobotPose, Vector3d; rotation, RobotPose, Vector3d; geom, Obstacle, Box; pose, Obstacle, Vector3d; rotation, Obstacle, Vector3d; geom, Door, Door; pose, Door, Vector3d; rotation, Door, Vector3d; hinge, Door, Vector1d; geom, Baxter, Baxter; left, Baxter, ArmPose7d; left_gripper, Baxter, Vector2d; left_ee_pos, Baxter, Vector3d; left_ee_rot, Baxter, Vector3d; right, Baxter, ArmPose7d; right_gripper, Baxter, Vector2d; right_ee_pos, Baxter, Vector3d; right_ee_rot, Baxter, Vector3d; left, BaxterPose, ArmPose7d; left_gripper, BaxterPose, Vector2d; left_ee_pos, BaxterPose, Vector3d; left_ee_rot, BaxterPose, Vector3d; right, BaxterPose, ArmPose7d; right_gripper, BaxterPose, Vector2d; right_ee_pos, BaxterPose, Vector3d; right_ee_rot, BaxterPose, Vector3d; geom, Sawyer, Sawyer; right, Sawyer, ArmPose7d; right_gripper, Sawyer, Vector2d; right_ee_pos, Sawyer, Vector3d; right_ee_rot, Sawyer, Vector3d; right, SawyerPose, ArmPose7d; right_gripper, SawyerPose, Vector2d; right_ee_pos, SawyerPose, Vector3d; right_ee_rot, SawyerPose, Vector3d; geom, Panda, Panda; right, Panda, ArmPose7d; right_gripper, Panda, Vector2d; right_ee_pos, Panda, Vector3d; right_ee_rot, Panda, Vector3d; right, PandaPose, ArmPose7d; right_gripper, PandaPose, Vector2d; right_ee_pos, PandaPose, Vector3d; right_ee_rot, PandaPose, Vector3d

Derived Predicates: At, Reachable, Reachable; AtRot, Reachable, Reachable; AtInit, Item, Reachable; Near, Reachable, Reachable; RobotAt, Robot, RobotPose; IsMP, Robot; WithinJointLimit, Robot; Stationary, Reachable; StationaryRot, Reachable; StationaryNEq, Reachable, Reachable; StationaryBase, Robot; StationaryArms, Robot; StationaryLeftArm, Robot; StationaryRightArm, Robot; StationaryW, Obstacle; StationaryWNEq, Obstacle, Obstacle; StationaryWBase, Obstacle; StationaryXY, Reachable; StationaryYZ, Reachable; StationaryXZ, Reachable; CloseGripper, Robot; CloseGripperLeft, Robot; CloseGripperRight, Robot; OpenGripper, Robot; OpenGripperLeft, Robot; OpenGripperRight, Robot; Obstructs, Robot, CollisionShape; ObstructsHolding, Robot, CollisionShape, CollisionShape; Collides, CollisionShape, CollisionShape; RCollides, Robot, CollisionShape; RSelfCollides, Robot; EEReachable, Robot, Reachable; EEReachableLeft, Robot, Reachable; EEReachableRight, Robot, Reachable; EEApproachLeft, Robot, Reachable; EEApproachRight, Robot, Reachable; EEApproachAbsLeft, Robot, Reachable; EEApproachAbsRight, Robot, Reachable; EEApproachStackLeft, Robot, Reachable, Reachable; EEApproachStackRight, Robot, Reachable, Reachable; EERetreatLeft, Robot, Reachable; EERetreatRight, Robot, Reachable; EEWeakRetreatRight, Robot, Reachable; EERetreatAbsLeft, Robot, Reachable; EERetreatAbsRight, Robot, Reachable; EERetreatStackLeft, Robot, Reachable, Reachable; EERetreatStackRight, Robot, Reachable, Reachable; EEAtXYLeft, Robot, Reachable; EEAtXYRight, Robot, Reachable; EEAtXZLeft, Robot, Reachable; EEAtXZRight, Robot, Reachable; EEAtYZLeft, Robot, Reachable; EEAtYZRight, Robot, Reachable; EEAtRelXYLeft, Robot, Reachable; EEAtRelXYRight, Robot, Reachable; EEAtXRelLeft, Robot, Reachable; EEAtXRelRight, Robot, Reachable; EEAtYRelLeft, Robot, Reachable; EEAtYRelRight, Robot, Reachable; EEAtZRelLeft, Robot, Reachable; EEAtZRelRight, Robot, Reachable; EEAtRelXZLeft, Robot, Reachable; EEAtRelXZRight, Robot, Reachable; EEAtRelYZLeft, Robot, Reachable; EEAtRelYZRight, Robot, Reachable; Approach, Robot, Reachable; ApproachLeft, Robot, Reachable; ApproachRight, Robot, Reachable; NearApproach, Robot, Reachable; NearApproachLeft, Robot, Reachable; NearApproachRight, Robot, Reachable; NearRetreatRight, Robot, Reachable; EEReachableRot, Robot, Reachable; EEReachableLeftRot, Robot, Reachable; EEReachableRightRot, Robot, Reachable; ApproachRot, Robot, Reachable; ApproachLeftRot, Robot, Reachable; ApproachRightRot, Robot, Reachable; EEAtLeftRot, Robot, Reachable; EEAtRightRot, Robot, Reachable; NearApproachRot, Robot, Reachable; NearApproachLeftRot, Robot, Reachable; NearApproachRightRot, Robot, Reachable; InGripperLeft, Robot, Reachable; InGripperRight, Robot, Reachable; InGripper, Robot, Reachable; NearGripper, Robot, Reachable; NearGripperLeft, Robot, Reachable; NearGripperRight, Robot, Reachable; GripperAtLeft, Robot, Reachable; GripperAtRight, Robot, Reachable; GripperAt, Robot, Reachable; GrippersDownRot, Robot; LeftGripperDownRot, Robot; RightGripperDownRot, Robot; HeightBlock, Item, Item; AboveTable, Item; Lifted, Item, Robot; InReach, Reachable, Robot; Stacked, Item, Item; Stackable, Item, Item; DeskHeightBlock, Item, Item; SlideDoorAt, Reachable, Door; SlideDoorOpen, Reachable, Door; SlideDoorClose, Reachable, Door; SlideDoorAtOpen, Reachable, Door; SlideDoorAtClose, Reachable, Door; InSlideDoor, Item, Door; EEApproachInDoorLeft, Robot, Door; EERetreatInDoorLeft, Robot, Door; EEApproachInDoorRight, Robot, Door; EERetreatInDoorRight, Robot, Door; NearApproachInDoorLeft, Robot, Door; NearApproachInDoorRight, Robot, Door


# The first set of parentheses after the colon contains the
# parameters. The second contains preconditions and the third contains
# effects. This split between preconditions and effects is only used
# for task planning purposes. Our system treats all predicates
# similarly, using the numbers at the end, which specify active
# timesteps during which each predicate must hold



Action move_to_grasp_right 19: (?robot - Robot ?item - Item ?targ - Target) (and (forall (?obj - Item)(not (Obstructs ?robot ?obj))) (forall (?obj - Item)(Stationary ?obj)) (forall (?obs - Obstacle) (StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?w - Obstacle) (not (RCollides ?robot ?w))) (forall (?obj - Item) (not (InGripperRight ?robot ?obj))) (OpenGripperRight ?robot) (not (NearGripperRight ?robot ?item)) (InReach ?item ?robot) )(and (NearApproachRight ?robot ?item) (forall (?obj - Item / ?item) (not (EEAtXYRight ?robot ?obj))) (forall (?obj - Item) (not (Lifted ?obj ?robot))) (forall (?obj - Target / ?targ) (not (EEAtXYRight ?robot ?obj))) (forall (?obj - Item / ?item) (not (NearApproachRight ?robot ?obj))) (forall (?obj - Target) (not (NearApproachRight ?robot ?obj))) (forall (?obj - Reachable) (not (NearGripperRight ?robot ?obj))) (forall (?obj - Reachable) (not (InGripperRight ?robot ?obj))) ) 1:17 0:17 0:17 0:17 0:18 1:17 0:0 14:17 0:0 0:0 18:18 18:17 18:17 18:17 18:17 18:17 18:17 18:17 

Action lift_right 24: (?robot - Robot ?item - Item ?target - Reachable) (and (forall (?door - Door) (not (SlideDoorAt ?item ?door))) (not (Lifted ?item ?robot)) (forall (?obj - Item) (not (Stacked ?obj ?item))) (forall (?obj - Item) (StationaryNEq ?obj ?item)) (forall (?obj - Item) (Stationary ?obj)) (forall (?obs - Obstacle)(StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obj - Item) (not (ObstructsHolding ?robot ?obj ?item))) (NearApproachRight ?robot ?item) (not (NearGripperRight ?robot ?item)) (NearGripperRight ?robot ?item) (EEApproachRight ?robot ?item) (EEAtYRelRight ?robot ?item) (EEAtRightRot ?robot ?item) (CloseGripperRight ?robot) (OpenGripperRight ?robot) )(and (Lifted ?item ?robot) (forall (?obj - Item) (not (Stacked ?item ?obj))) (forall (?obj - Reachable) (not (At ?item ?obj))) (forall (?obj - Reachable) (not (Near ?item ?obj))) (not (Obstructs ?robot ?item)) (forall (?obj - Item) (not (ObstructsHolding ?robot ?item ?obj))) (InGripperRight ?robot ?item) (NearGripperRight ?robot ?item) (forall (?reach - Reachable) (not (ApproachRight ?robot ?reach))) (forall (?reach - Reachable) (not (NearApproachRight ?robot ?reach))) ) 0:-1 0:-1 0:-1 0:22 0:14 0:22 0:22 0:23 1:23 0:0 0:0 14:22 14:14 4:8 9:14 14:22 1:13 23:23 23:22 23:22 23:22 23:22 23:22 23:22 23:22 23:22 23:22 

Action slide_open_right 26: (?robot - Robot ?door - Door ?item - Item) (and (SlideDoorAt ?item ?door) (SlideDoorAt ?item ?door) (forall (?obj - Item) (Stationary ?obj)) (forall (?obj - Handle) (Stationary ?obj)) (forall (?obj - Item)(StationaryNEq ?obj ?item)) (forall (?obj - Handle)(StationaryNEq ?obj ?item)) (forall (?obs - Obstacle)(StationaryWBase ?obs)) (forall (?obs - Obstacle)(StationaryWNEq ?obs ?door)) (StationaryW ?door) (StationaryW ?door) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obj - Item) (not (DeskHeightBlock ?item ?obj))) (forall (?obj - Item)(not (Obstructs ?robot ?obj))) (not (SlideDoorOpen ?item ?door)) (not (SlideDoorOpen ?item ?door)) (NearApproachRight ?robot ?item) (NearGripperRight ?robot ?item) (EEAtRightRot ?robot ?item) (EEAtRightRot ?robot ?item) (NearApproachRightRot ?robot ?item) (EEApproachRight ?robot ?item) (EERetreatRight ?robot ?item) (OpenGripperRight ?robot) (CloseGripperRight ?robot) (OpenGripperRight ?robot) )(and (not (Obstructs ?robot ?item)) (not (RCollides ?robot ?door)) (forall (?obj - Item) (not (ObstructsHolding ?robot ?item ?obj))) (SlideDoorOpen ?item ?door) (SlideDoorAtOpen ?item ?door) (not (SlideDoorClose ?item ?door)) (forall (?obj - Reachable)  (not (InGripperRight ?robot ?obj))) (forall (?obj - Reachable)  (not (NearGripperRight ?robot ?obj))) (not (InGripperRight ?robot ?item)) (forall (?obj - Reachable / ?item)  (not (NearApproachRight ?robot ?obj))) (forall (?obj - Item) (not (EEAtXYRight ?robot ?obj))) (NearRetreatRight ?robot ?item) ) 0:0 1:25 16:24 16:24 0:24 0:24 0:24 0:24 0:8 16:24 0:24 0:25 0:0 22:24 0:0 1:9 0:0 9:16 6:9 16:19 9:16 9:9 16:16 1:8 9:16 17:24 25:24 25:24 25:24 16:25 16:24 25:25 25:24 25:24 25:24 25:24 25:24 25:25 

Action slide_close_right 26: (?robot - Robot ?door - Door ?item - Item) (and (SlideDoorAt ?item ?door) (SlideDoorAt ?item ?door) (forall (?obj - Item) (Stationary ?obj)) (forall (?obj - Handle) (Stationary ?obj)) (forall (?obj - Item)(StationaryNEq ?obj ?item)) (forall (?obj - Handle)(StationaryNEq ?obj ?item)) (forall (?obs - Obstacle)(StationaryWBase ?obs)) (forall (?obs - Obstacle)(StationaryWNEq ?obs ?door)) (StationaryW ?door) (StationaryW ?door) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obj - Item) (not (DeskHeightBlock ?item ?obj))) (forall (?obj - Item)(not (Obstructs ?robot ?obj))) (not (SlideDoorClose ?item ?door)) (not (SlideDoorClose ?item ?door)) (NearApproachRight ?robot ?item) (NearGripperRight ?robot ?item) (EEAtRightRot ?robot ?item) (EEAtRightRot ?robot ?item) (NearApproachRightRot ?robot ?item) (EEApproachRight ?robot ?item) (EERetreatRight ?robot ?item) (OpenGripperRight ?robot) (CloseGripperRight ?robot) (OpenGripperRight ?robot) )(and (not (Obstructs ?robot ?item)) (not (RCollides ?robot ?door)) (forall (?obj - Item) (not (ObstructsHolding ?robot ?item ?obj))) (SlideDoorClose ?item ?door) (SlideDoorAtClose ?item ?door) (not (SlideDoorOpen ?item ?door)) (forall (?obj - Reachable)  (not (InGripperRight ?robot ?obj))) (forall (?obj - Reachable)  (not (NearGripperRight ?robot ?obj))) (not (InGripperRight ?robot ?item)) (forall (?obj - Reachable / ?item)  (not (NearApproachRight ?robot ?obj))) (forall (?obj - Item) (not (EEAtXYRight ?robot ?obj))) (NearRetreatRight ?robot ?item) ) 0:0 1:25 16:24 16:24 0:24 0:24 0:24 0:24 0:8 16:24 0:24 0:25 0:0 22:24 0:0 1:9 0:0 9:16 6:9 16:19 9:16 9:9 16:16 1:8 9:16 17:24 25:24 25:24 25:24 16:25 16:24 25:25 25:24 25:24 25:24 25:24 25:24 25:25 

Action place_right 21: (?robot - Robot ?target - Target ?item - Item) (and (Near ?item ?target) (forall (?door - Door) (not (SlideDoorAt ?item ?door))) (At ?item ?target) (Lifted ?item ?robot) (forall (?obj - Item) (Stationary ?obj)) (forall (?obj - Item)(StationaryNEq ?obj ?item)) (forall (?obs - Obstacle)(StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obj - Item)(not (Obstructs ?robot ?obj))) (forall (?obj - Item)(not (ObstructsHolding ?robot ?obj ?item))) (NearGripperRight ?robot ?item) (not (NearGripperRight ?robot ?item)) (EEApproachRight ?robot ?target) (EERetreatRight ?robot ?target) (EEAtRightRot ?robot ?target) (CloseGripperRight ?robot) (OpenGripperRight ?robot) )(and (At ?item ?target) (not (InReach ?item ?robot)) (not (Lifted ?item ?robot)) (Near ?item ?target) (forall (?obj - Reachable / ?target) (not (At ?item ?obj))) (forall (?obj - Reachable / ?target) (not (Near ?item ?obj))) (not (Obstructs ?robot ?item)) (forall (?obj - Item) (not (ObstructsHolding ?robot ?item ?obj))) (forall (?obj - Item) (not (DeskHeightBlock ?obj ?item))) (forall (?obj - Item)  (not (InGripperRight ?robot ?obj))) (forall (?obj - Item)  (not (NearGripperRight ?robot ?obj))) (not (NearGripperRight ?robot ?item)) (forall (?reach - Reachable / ?target) (not (NearApproachRight ?robot ?reach))) ) 11:19 0:-1 11:11 0:-1 11:19 0:19 0:19 0:19 0:20 1:6 16:19 17:20 1:5 1:11 17:19 11:11 11:11 11:13 1:10 11:19 20:19 20:19 20:19 20:20 20:19 20:19 20:19 20:19 20:19 20:20 20:19 20:20 20:19 

Action place_in_door_right 24: (?robot - Robot ?door - Door ?item - Item ?handle - Reachable) (and (InSlideDoor ?item ?door) (forall (?obj - Door) (not (SlideDoorAt ?item ?obj))) (SlideDoorOpen ?handle ?door) (SlideDoorAt ?handle ?door) (SlideDoorOpen ?handle ?door) (Lifted ?item ?robot) (forall (?obj - Item) (not (DeskHeightBlock ?item ?obj))) (forall (?obj - Item) (Stationary ?obj)) (forall (?obj - Item)(StationaryNEq ?obj ?item)) (forall (?obs - Obstacle)(StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obj - Item)(not (ObstructsHolding ?robot ?obj ?item))) (forall (?obj - Item)(not (ObstructsHolding ?robot ?obj ?item))) (NearGripperRight ?robot ?item) (EEWeakRetreatRight ?robot ?item) (EEAtRightRot ?robot ?item) (CloseGripperRight ?robot) (OpenGripperRight ?robot) )(and (not (Lifted ?item ?robot)) (not (InReach ?item ?robot)) (InSlideDoor ?item ?door) (not (Obstructs ?robot ?item)) (forall (?obj - Item) (not (ObstructsHolding ?robot ?item ?obj))) (forall (?obj - Item) (not (DeskHeightBlock ?obj ?item))) (forall (?obj - Reachable)  (not (InGripperRight ?robot ?obj))) (forall (?obj - Reachable)  (not (NearGripperRight ?robot ?obj))) (not (NearGripperRight ?robot ?item)) (forall (?obj - Item) (not (EEAtXYRight ?robot ?obj))) (NearApproachInDoorRight ?robot ?door) (forall (?reach - Reachable / ?item) (not (NearApproachRight ?robot ?reach))) ) 14:22 0:-1 0:0 0:0 1:22 0:0 0:0 14:22 0:22 0:22 0:22 0:23 1:8 20:22 17:22 1:11 1:14 14:14 14:16 1:13 14:22 23:22 23:22 23:23 23:22 23:22 23:22 23:23 23:22 23:23 23:22 23:23 23:22 

Action stack_right 23: (?robot - Robot ?base - Box ?item - Box) (and (forall (?door - Door) (not (SlideDoorAt ?item ?door))) (forall (?door - Door) (not (SlideDoorAt ?base ?door))) (Stacked ?item ?base) (Stackable ?base ?item) (AtRot ?item ?base) (forall (?obj - Item) (Stationary ?obj)) (forall (?obj - Item)(StationaryNEq ?obj ?item)) (forall (?obs - Obstacle)(StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obj - Item)(not (Obstructs ?robot ?obj))) (forall (?obj - Item)(not (ObstructsHolding ?robot ?obj ?item))) (NearGripperRight ?robot ?item) (NearGripperRight ?robot ?item) (EEApproachStackRight ?robot ?base ?item) (EERetreatStackRight ?robot ?base ?item) (EEAtRightRot ?robot ?base) (CloseGripperRight ?robot) (OpenGripperRight ?robot) )(and (Stacked ?item ?base) (not (Lifted ?item ?robot)) (not (Obstructs ?robot ?item)) (forall (?obj - Item) (not (ObstructsHolding ?robot ?item ?obj))) (forall (?obj - Item)  (not (InGripperRight ?robot ?obj))) (forall (?obj - Item)  (not (NearGripperRight ?robot ?obj))) (forall (?reach - Item / ?item) (not (NearApproachRight ?robot ?reach))) ) 0:-1 0:-1 13:21 0:0 7:21 13:21 0:21 0:21 0:21 0:22 1:7 19:21 19:21 1:7 0:0 1:13 13:13 13:13 12:14 1:12 13:21 22:22 22:21 22:21 22:21 22:22 22:22 22:21 