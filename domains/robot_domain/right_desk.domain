
# AUTOGENERATED. DO NOT EDIT.
# Configuration file for CAN domain. Blank lines and lines beginning with # are filtered out.

# implicity, all types require a name
Types: Robot, RobotPose, CollisionShape 

# Define the class location of each non-standard attribute type used in the above parameter type descriptions.

Attribute Import Paths: Vector1d core.util_classes.matrix, Vector2d core.util_classes.matrix, Vector3d core.util_classes.matrix, ArmPose7d core.util_classes.matrix, Table core.util_classes.items, Box core.util_classes.items, Basket core.util_classes.items, Cloth core.util_classes.items, Can core.util_classes.items, Door core.util_classes.items, Sphere core.util_classes.items, Baxter core.util_classes.robots, Sawyer core.util_classes.robots, Panda core.util_classes.robots

Predicates Import Path: core.util_classes.robot_predicates


Subtypes: Obstacle, Reachable - CollisionShape; Item, Target, SlideTarget, Handle, Button - Reachable; Cloth, Can, Box, Basket, Sphere - Item; Door - Obstacle; ClothTarget, BoxTarget, CanTarget, BasketTarget - Target; Baxter, Sawyer, Panda - Robot; BaxterPose, SawyerPose, PandaPose - RobotPose

Primitive Predicates: value, Reachable, Vector3d; rotation, Reachable, Vector3d; pose, CollisionShape, Vector3d; rotation, CollisionShape, Vector3d; pose, Item, Vector3d; rotation, Item, Vector3d; value, Target, Vector3d; rotation, Target, Vector3d; value, SlideTarget, Vector3d; rotation, SlideTarget, Vector3d; geom, Basket, Basket; pose, Basket, Vector3d; rotation, Basket, Vector3d; geom, Cloth, Cloth; pose, Cloth, Vector3d; rotation, Cloth, Vector3d; geom, Can, Can; pose, Can, Vector3d; rotation, Can, Vector3d; geom, Handle, Can; pose, Handle, Vector3d; rotation, Handle, Vector3d; geom, Sphere, Sphere; pose, Sphere, Vector3d; rotation, Sphere, Vector3d; geom, Box, Box; pose, Box, Vector3d; rotation, Box, Vector3d; geom, BasketTarget, Basket; value, BasketTarget, Vector3d; rotation, BasketTarget, Vector3d; value, ClothTarget, Vector3d; rotation, ClothTarget, Vector3d; geom, ClothTarget, Cloth; value, CanTarget, Vector3d; rotation, CanTarget, Vector3d; geom, CanTarget, Can; value, BoxTarget, Vector3d; rotation, BoxTarget, Vector3d; geom, BoxTarget, Box; pose, Robot, Vector3d; rotation, Robot, Vector3d; value, RobotPose, Vector3d; rotation, RobotPose, Vector3d; geom, Obstacle, Box; pose, Obstacle, Vector3d; rotation, Obstacle, Vector3d; geom, Door, Door; pose, Door, Vector3d; rotation, Door, Vector3d; hinge, Door, Vector1d; geom, Baxter, Baxter; left, Baxter, ArmPose7d; left_gripper, Baxter, Vector2d; left_ee_pos, Baxter, Vector3d; left_ee_rot, Baxter, Vector3d; right, Baxter, ArmPose7d; right_gripper, Baxter, Vector2d; right_ee_pos, Baxter, Vector3d; right_ee_rot, Baxter, Vector3d; left, BaxterPose, ArmPose7d; left_gripper, BaxterPose, Vector2d; left_ee_pos, BaxterPose, Vector3d; left_ee_rot, BaxterPose, Vector3d; right, BaxterPose, ArmPose7d; right_gripper, BaxterPose, Vector2d; right_ee_pos, BaxterPose, Vector3d; right_ee_rot, BaxterPose, Vector3d; geom, Sawyer, Sawyer; right, Sawyer, ArmPose7d; right_gripper, Sawyer, Vector2d; right_ee_pos, Sawyer, Vector3d; right_ee_rot, Sawyer, Vector3d; right, SawyerPose, ArmPose7d; right_gripper, SawyerPose, Vector2d; right_ee_pos, SawyerPose, Vector3d; right_ee_rot, SawyerPose, Vector3d; geom, Panda, Panda; right, Panda, ArmPose7d; right_gripper, Panda, Vector2d; right_ee_pos, Panda, Vector3d; right_ee_rot, Panda, Vector3d; right, PandaPose, ArmPose7d; right_gripper, PandaPose, Vector2d; right_ee_pos, PandaPose, Vector3d; right_ee_rot, PandaPose, Vector3d

Derived Predicates: At, Reachable, Reachable; AtInit, Item, Reachable; Near, Reachable, Reachable; RobotAt, Robot, RobotPose; IsMP, Robot; WithinJointLimit, Robot; Stationary, Reachable; StationaryRot, Reachable; StationaryNEq, Reachable, Reachable; StationaryBase, Robot; StationaryArms, Robot; StationaryLeftArm, Robot; StationaryRightArm, Robot; StationaryW, Obstacle; StationaryWNEq, Obstacle, Obstacle; StationaryWBase, Obstacle; StationaryXY, Reachable; StationaryYZ, Reachable; StationaryXZ, Reachable; CloseGripper, Robot; CloseGripperLeft, Robot; CloseGripperRight, Robot; OpenGripper, Robot; OpenGripperLeft, Robot; OpenGripperRight, Robot; Obstructs, Robot, CollisionShape; ObstructsHolding, Robot, CollisionShape, CollisionShape; Collides, CollisionShape, CollisionShape; RCollides, Robot, CollisionShape; RSelfCollides, Robot; EEReachable, Robot, Reachable; EEReachableLeft, Robot, Reachable; EEReachableRight, Robot, Reachable; EEApproachLeft, Robot, Reachable; EEApproachRight, Robot, Reachable; EEApproachStackLeft, Robot, Reachable, Reachable; EEApproachStackRight, Robot, Reachable, Reachable; EEApproachInDoorLeft, Robot, Door; EEApproachInDoorRight, Robot, Door; EERetreatLeft, Robot, Reachable; EERetreatRight, Robot, Reachable; EERetreatStackLeft, Robot, Reachable, Reachable; EERetreatStackRight, Robot, Reachable, Reachable; EERetreatInDoorLeft, Robot, Door; EERetreatInDoorRight, Robot, Door; EEAtXYLeft, Robot, Reachable; EEAtXYRight, Robot, Reachable; EEAtXZLeft, Robot, Reachable; EEAtXZRight, Robot, Reachable; EEAtYZLeft, Robot, Reachable; EEAtYZRight, Robot, Reachable; EEAtRelXYLeft, Robot, Reachable; EEAtRelXYRight, Robot, Reachable; EEAtRelXZLeft, Robot, Reachable; EEAtRelXZRight, Robot, Reachable; EEAtRelYZLeft, Robot, Reachable; EEAtRelYZRight, Robot, Reachable; Approach, Robot, Reachable; ApproachLeft, Robot, Reachable; ApproachRight, Robot, Reachable; NearApproach, Robot, Reachable; NearApproachLeft, Robot, Reachable; NearApproachRight, Robot, Reachable; EEReachableRot, Robot, Reachable; EEReachableLeftRot, Robot, Reachable; EEReachableRightRot, Robot, Reachable; ApproachRot, Robot, Reachable; ApproachLeftRot, Robot, Reachable; ApproachRightRot, Robot, Reachable; EEAtLeftRot, Robot, Reachable; EEAtRightRot, Robot, Reachable; NearApproachRot, Robot, Reachable; NearApproachLeftRot, Robot, Reachable; NearApproachRightRot, Robot, Reachable; InGripperLeft, Robot, Reachable; InGripperRight, Robot, Reachable; InGripper, Robot, Reachable; NearGripper, Robot, Reachable; NearGripperLeft, Robot, Reachable; NearGripperRight, Robot, Reachable; GripperAtLeft, Robot, Reachable; GripperAtRight, Robot, Reachable; GripperAt, Robot, Reachable; GrippersDownRot, Robot; LeftGripperDownRot, Robot; RightGripperDownRot, Robot; HeightBlock, Item, Item; AboveTable, Item; Lifted, Item, Robot; Stacked, Item, Item; SlideDoorAt, Reachable, Door; SlideDoorOpen, Reachable, Door; SlideDoorClose, Reachable, Door; InSlideDoor, Item, Door


# The first set of parentheses after the colon contains the
# parameters. The second contains preconditions and the third contains
# effects. This split between preconditions and effects is only used
# for task planning purposes. Our system treats all predicates
# similarly, using the numbers at the end, which specify active
# timesteps during which each predicate must hold



Action move_to_grasp_right 17: (?robot - Robot ?item - Reachable ?targ - Reachable) (and (forall (?obj - Item)(not (Obstructs ?robot ?obj))) (forall (?obj - Item)(Stationary ?obj)) (forall (?obs - Obstacle) (StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?w - Obstacle) (not (RCollides ?robot ?w))) (forall (?obj - Item) (not (InGripperRight ?robot ?obj))) (forall (?obj - Item) (not (NearGripperRight ?robot ?obj))) (OpenGripperRight ?robot) (At ?item ?targ) (At ?item ?targ) (not (EEAtXYRight ?robot ?item)) (not (NearGripperRight ?robot ?item)) )(and (NearApproachRight ?robot ?item) (NearApproachRightRot ?robot ?item) (NearApproachRight ?robot ?targ) (forall (?obj - Item / ?item) (not (EEAtXYRight ?robot ?obj))) (forall (?obj - Target / ?targ) (not (EEAtXYRight ?robot ?obj))) (forall (?obj - Item / ?item) (not (NearApproachRight ?robot ?obj))) (forall (?obj - Target / ?targ) (not (NearApproachRight ?robot ?obj))) (forall (?obj - Reachable) (not (NearGripperRight ?robot ?obj))) (forall (?obj - Reachable) (not (InGripperRight ?robot ?obj))) ) 1:15 0:15 0:15 0:15 0:16 1:15 0:0 0:0 12:15 0:0 1:16 0:0 0:0 16:16 16:16 16:15 16:15 16:15 16:15 16:15 16:15 16:15 

Action hold_right 13: (?robot - Robot ?item - Reachable ?target - Reachable) (and (At ?item ?target) (At ?item ?target) (forall (?obj - Item) (StationaryRot ?obj)) (forall (?obj - Item) (StationaryNEq ?obj ?item)) (forall (?obj - Item) (Stationary ?obj)) (forall (?obs - Obstacle)(StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Obstacle) (not (RCollides ?robot ?obs))) (forall (?obj - Item) (not (Obstructs ?robot ?obj))) (forall (?obj - Item) (not (ObstructsHolding ?robot ?obj ?item))) (NearApproachRight ?robot ?item) (not (InGripperRight ?robot ?item)) (not (InGripperLeft ?robot ?item)) (not (NearGripperRight ?robot ?item)) (not (NearGripperLeft ?robot ?item)) (EEApproachRight ?robot ?item) (OpenGripperRight ?robot) (NearGripperRight ?robot ?item) (forall (?obj - Item) (not (InGripperRight ?robot ?item))) (forall (?obj - Item) (not (NearGripperRight ?robot ?item))) )(and (InGripperRight ?robot ?item) (NearGripperRight ?robot ?item) (EEAtXYRight ?robot ?target) (EEAtXZRight ?robot ?target) (EEAtRelXYRight ?robot ?target) (EEAtRelXZRight ?robot ?target) (not (NearApproachRight ?robot ?item)) (forall (?reach - Reachable) (not (ApproachRight ?robot ?reach))) (forall (?reach - Reachable) (not (NearApproachRight ?robot ?reach))) ) 0:0 1:12 0:11 0:11 0:11 0:11 0:11 0:12 1:4 1:4 4:11 0:0 0:0 0:0 0:0 0:0 11:11 1:11 12:11 0:0 0:0 12:11 11:12 12:11 12:11 12:11 12:11 12:11 12:11 12:11 

Action lift_right 8: (?robot - Robot ?item - Item ?target - Reachable) (and (At ?item ?target) (not (Lifted ?item ?robot)) (forall (?obj - Item) (not (Stacked ?obj ?item))) (forall (?obj - Item) (StationaryRot ?obj)) (forall (?obj - Item) (StationaryNEq ?obj ?item)) (forall (?obs - Obstacle)(StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (NearGripperRight ?robot ?item) (NearGripperRight ?robot ?item) (EEAtRightRot ?robot ?target) (CloseGripperRight ?robot) )(and (not (At ?item ?target)) (not (Near ?item ?target)) (Lifted ?item ?robot) (forall (?obj - Item) (not (Stacked ?item ?obj))) (not (Obstructs ?robot ?item)) (forall (?obj - Item) (not (ObstructsHolding ?robot ?item ?obj))) (InGripperRight ?robot ?item) (NearGripperRight ?robot ?item) ) 0:0 0:-1 0:-1 0:6 0:6 0:6 0:6 0:7 0:0 1:6 1:6 1:6 7:6 7:6 7:6 7:6 7:6 7:6 7:6 7:7 

Action slide_open_right 19: (?robot - Robot ?door - Door ?item - Item) (and (SlideDoorAt ?item ?door) (SlideDoorAt ?item ?door) (forall (?obj - Item) (Stationary ?obj)) (forall (?obj - Handle) (Stationary ?obj)) (forall (?obj - Item)(StationaryNEq ?obj ?item)) (forall (?obj - Handle)(StationaryNEq ?obj ?item)) (forall (?obs - Obstacle)(StationaryWBase ?obs)) (forall (?obs - Obstacle)(StationaryWNEq ?obs ?door)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obj - Item)(not (Obstructs ?robot ?obj))) (not (SlideDoorOpen ?item ?door)) (NearGripperRight ?robot ?item) (NearGripperRight ?robot ?item) (not (NearGripperRight ?robot ?item)) (EEAtRightRot ?robot ?item) (EERetreatRight ?robot ?item) (CloseGripperRight ?robot) (OpenGripperRight ?robot) )(and (not (Obstructs ?robot ?item)) (not (RCollides ?robot ?door)) (forall (?obj - Item) (not (ObstructsHolding ?robot ?item ?obj))) (SlideDoorOpen ?item ?door) (not (SlideDoorClose ?item ?door)) (forall (?obj - Item)  (not (InGripperRight ?robot ?obj))) (forall (?obj - Item)  (not (NearGripperRight ?robot ?obj))) (NearApproachRight ?robot ?item) ) 0:0 1:18 9:17 9:17 0:17 0:17 0:17 0:17 0:17 0:18 10:17 12:18 0:0 0:0 1:9 15:17 9:10 9:9 1:8 9:17 18:17 18:17 18:17 9:17 18:18 18:18 18:18 18:17 

Action slide_close_right 19: (?robot - Robot ?door - Door ?item - Item) (and (SlideDoorAt ?item ?door) (SlideDoorAt ?item ?door) (forall (?obj - Item) (Stationary ?obj)) (forall (?obj - Handle) (Stationary ?obj)) (forall (?obj - Item)(StationaryNEq ?obj ?item)) (forall (?obj - Handle)(StationaryNEq ?obj ?item)) (forall (?obs - Obstacle)(StationaryWBase ?obs)) (forall (?obs - Obstacle)(StationaryWNEq ?obs ?door)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obj - Item)(not (Obstructs ?robot ?obj))) (not (SlideDoorClose ?item ?door)) (NearGripperRight ?robot ?item) (NearGripperRight ?robot ?item) (not (NearGripperRight ?robot ?item)) (EEAtRightRot ?robot ?item) (EERetreatRight ?robot ?item) (CloseGripperRight ?robot) (OpenGripperRight ?robot) )(and (not (Obstructs ?robot ?item)) (not (RCollides ?robot ?door)) (forall (?obj - Item) (not (ObstructsHolding ?robot ?item ?obj))) (SlideDoorClose ?item ?door) (not (SlideDoorOpen ?item ?door)) (forall (?obj - Item)  (not (InGripperRight ?robot ?obj))) (forall (?obj - Item)  (not (NearGripperRight ?robot ?obj))) (NearApproachRight ?robot ?item) ) 0:0 1:18 9:17 9:17 0:17 0:17 0:17 0:17 0:17 0:18 10:17 12:18 0:0 0:0 1:9 15:17 9:10 9:9 1:8 9:17 18:17 18:17 18:17 9:17 18:18 18:18 18:18 18:17 

Action place_right 19: (?robot - Robot ?target - Target ?item - Item) (and (Near ?item ?target) (At ?item ?target) (Lifted ?item ?robot) (forall (?obj - Item) (Stationary ?obj)) (forall (?obj - Item)(StationaryNEq ?obj ?item)) (forall (?obs - Obstacle)(StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obj - Item)(not (Obstructs ?robot ?obj))) (forall (?obj - Item)(not (ObstructsHolding ?robot ?obj ?item))) (NearGripperRight ?robot ?item) (NearGripperRight ?robot ?item) (not (NearGripperRight ?robot ?item)) (EEApproachRight ?robot ?target) (EERetreatRight ?robot ?target) (EEAtRightRot ?robot ?target) (CloseGripperRight ?robot) (OpenGripperRight ?robot) )(and (At ?item ?target) (not (Lifted ?item ?robot)) (Near ?item ?target) (not (Obstructs ?robot ?item)) (forall (?obj - Item) (not (ObstructsHolding ?robot ?item ?obj))) (forall (?obj - Item) (not (HeightBlock ?obj ?item))) (forall (?obj - Item)  (not (InGripperRight ?robot ?obj))) (forall (?obj - Item)  (not (NearGripperRight ?robot ?obj))) (NearApproachRight ?robot ?item) (NearApproachRight ?robot ?target) (forall (?reach - Item / ?item) (not (NearApproachRight ?robot ?reach))) (forall (?reach - Target / ?target) (not (NearApproachRight ?robot ?reach))) ) 9:17 9:9 0:-1 9:17 0:17 0:17 0:17 0:18 1:8 10:17 12:18 1:11 0:0 1:9 15:17 9:9 9:9 4:14 1:8 9:17 18:17 18:17 18:18 18:17 18:17 18:17 18:18 18:18 18:17 18:17 18:17 18:17 

Action place_in_door_right 19: (?robot - Robot ?door - Door ?item - Item ?handle - Reachable) (and (InSlideDoor ?item ?door) (SlideDoorOpen ?handle ?door) (SlideDoorAt ?handle ?door) (SlideDoorOpen ?handle ?door) (Lifted ?item ?robot) (forall (?obj - Item) (Stationary ?obj)) (forall (?obj - Item)(StationaryNEq ?obj ?item)) (forall (?obs - Obstacle)(StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obj - Item)(not (Obstructs ?robot ?obj))) (forall (?obj - Item)(not (ObstructsHolding ?robot ?obj ?item))) (NearGripperRight ?robot ?item) (NearGripperRight ?robot ?item) (not (NearGripperRight ?robot ?item)) (EEApproachInDoorRight ?robot ?door) (EERetreatInDoorRight ?robot ?door) (CloseGripperRight ?robot) (OpenGripperRight ?robot) )(and (not (Lifted ?item ?robot)) (InSlideDoor ?item ?door) (not (Obstructs ?robot ?item)) (forall (?obj - Item) (not (ObstructsHolding ?robot ?item ?obj))) (forall (?obj - Item) (not (HeightBlock ?obj ?item))) (forall (?obj - Item)  (not (InGripperRight ?robot ?obj))) (forall (?obj - Item)  (not (NearGripperRight ?robot ?obj))) (NearApproachRight ?robot ?item) (forall (?reach - Reachable / ?item) (not (NearApproachRight ?robot ?reach))) ) 9:17 0:0 0:0 1:17 0:0 9:17 0:17 0:17 0:17 0:18 1:7 15:17 15:18 1:3 0:0 1:9 15:17 9:9 9:9 1:8 9:17 18:17 18:18 18:17 18:17 18:17 18:18 18:18 18:17 18:17 

Action stack_right 19: (?robot - Robot ?item - Item ?base - Item) (and (Stacked ?item ?base) (Lifted ?item ?robot) (forall (?obj - Item) (Stationary ?obj)) (forall (?obj - Item)(StationaryNEq ?obj ?item)) (forall (?obs - Obstacle)(StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obs - Obstacle)(not (RCollides ?robot ?obs))) (forall (?obj - Item)(not (Obstructs ?robot ?obj))) (forall (?obj - Item)(not (ObstructsHolding ?robot ?obj ?item))) (NearGripperRight ?robot ?item) (NearGripperRight ?robot ?item) (not (NearGripperRight ?robot ?item)) (EEApproachStackRight ?robot ?base ?item) (EERetreatStackRight ?robot ?base ?item) (EEAtRightRot ?robot ?base) (CloseGripperRight ?robot) (OpenGripperRight ?robot) )(and (Stacked ?item ?base) (not (Lifted ?item ?robot)) (not (Obstructs ?robot ?item)) (forall (?obj - Item) (not (ObstructsHolding ?robot ?item ?obj))) (forall (?obj - Item) (not (HeightBlock ?obj ?item))) (forall (?obj - Item)  (not (InGripperRight ?robot ?obj))) (forall (?obj - Item)  (not (NearGripperRight ?robot ?obj))) (NearApproachRight ?robot ?item) (forall (?reach - Item / ?item) (not (NearApproachRight ?robot ?reach))) ) 9:17 0:-1 9:17 0:17 0:17 0:17 0:18 1:8 10:17 12:18 1:11 0:0 1:9 15:17 9:9 9:9 4:14 1:8 9:17 18:18 18:17 18:17 18:17 18:17 18:18 18:18 18:17 18:17 